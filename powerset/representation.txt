         (0, [])  
        /        \  
      +1          skip 1  
     (1, [1])       (0, [])  
    /       \        /      \  
  +2       skip 2  +2       skip 2  
 (3, [1,2]) (1, [1]) (2, [2])   (0, [])  
  |          /  \    /      \  
 ✅       +3   skip3 +3     skip 3  
(3, [1,2]) (1, [1]) (3, [3]) (0, [])  
          ✅         ✅  




                          (vide, sum = 0)
                           /       \
                 inclure 1      exclure 1
                       /  \               /  \
                 inclure 2   exclure 2   inclure 2  exclure 2
                    /  \           /  \         /  \         /  \
           inclure 3  exclure 3 inclure 3 exclure 3 inclure 3 exclure 3
             /   \         /  \    /   \      /   \        /   \
           [1,2,3]    [1,2]   [1]   [2]    [3]        [ ]     
             sum=6    sum=3 sum=1 sum=2 sum=3 sum= 0


find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [], subset_size = 0, start = 0, sum = 0)
│
├── (Inclure 1)
│   find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [1], subset_size = 1, start = 1, sum = 1)
│   │
│   ├── (Inclure 2)
│   │   find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [1, 2], subset_size = 2, start = 2, sum = 3)
│   │   │
│   │   │   (Trouvé une combinaison valide : [1, 2] avec somme = 3)
│   │   │
│   │   └── (Ne pas inclure 2)
│   │       find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [1], subset_size = 1, start = 2, sum = 1)
│   │       │
│   │       └── (Inclure 3)
│   │           find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [1, 3], subset_size = 2, start = 3, sum = 4)
│   │           │
│   │           │   (Somme trop grande, retour à l'appel précédent)
│   │           └── (Ne pas inclure 3)
│   │               find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [1], subset_size = 1, start = 3, sum = 1)
│   │
│   └── (Ne pas inclure 2)
│       find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [1], subset_size = 1, start = 2, sum = 1)
│       │
│       └── (Inclure 3)
│           find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [1, 3], subset_size = 2, start = 3, sum = 4)
│           │
│           │   (Somme trop grande, retour à l'appel précédent)
│           └── (Ne pas inclure 3)
│               find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [1], subset_size = 1, start = 3, sum = 1)
│
└── (Ne pas inclure 1)
    find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [], subset_size = 0, start = 1, sum = 0)
    │
    ├── (Inclure 2)
    │   find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [2], subset_size = 1, start = 2, sum = 2)
    │   │
    │   └── (Inclure 3)
    │       find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [2, 3], subset_size = 2, start = 3, sum = 5)
    │       │
    │       │   (Somme trop grande, retour à l'appel précédent)
    │       └── (Ne pas inclure 3)
    │           find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [2], subset_size = 1, start = 3, sum = 2)
    │
    └── (Ne pas inclure 2)
        find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [], subset_size = 0, start = 2, sum = 0)
        │
        └── (Inclure 3)
            find_subsets(arr = [1, 2, 3], size = 3, target = 3, subset = [3], subset_size = 1, start = 3, sum = 3)
            │
            │   (Trouvé une combinaison valide : [3] avec somme = 3)
